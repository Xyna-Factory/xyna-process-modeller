/*
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2023 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 */
@use '../../../const' as *;

$border-color: $color-gray-1;
$border: 1px solid $border-color;
$variable-gap: 12px;
$exception-triangle-width: 8px;

$link-state-width: 8px;
$link-state-margin: 8px;

$menu-width: 20px;



:host {
    display: flex;
    flex-direction: row;
    border-radius: $variable-border-radius;
    position: relative;
    margin-right: $variable-gap;

    &.dynamic-typing {
        &::after {
            content: "";
            position: absolute;
            width: 100%;
            height: 100%;
            left: 2px;
            top: -4px;
            background-color: $color-gray-3;
            border: $border;
            border-radius: $variable-border-radius;
            z-index: -1;
        }
    }

    &.selected, &.referred {
        outline: none;
        box-shadow: 0 0 2px 2px $color-focus-outline;
    }

    &:focus {
        outline: none;
    }

    .left-rim {
        background-color: $variable-left-rim-background-color;
        color: $variable-left-rim-label-color;
        text-align: center;
        width: 16px;
        border: $border;
        border-right: none;
        border-top-left-radius: $variable-border-radius;
        border-bottom-left-radius: $variable-border-radius;
        font-size: $variable-left-rim-font-size;
        // padding: 1px;
    }

    .content-area {
        display: flex;
        flex-direction: column;

        .label-area,
        .name-area,
        .fqn-area {
            border: $border;
            border-left: none;
        }

        .label-area,
        .name-area {
            background-color: $variable-background-color;
            color: $variable-label-color;
            padding: 0 ($link-state-width + $link-state-margin * 2 + $menu-width) 0px 8px;
            font-size: $pmod-medium;
            white-space: pre;
        }

        .label-area {
            border-radius: $variable-border-radius;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            position: relative;

            // exception triangle
            &.exception {
                padding-left: $exception-triangle-width + 8px;

                &::before {
                    content: "";
                    position: absolute;
                    left: 4px;
                    top: calc(50% - #{$exception-triangle-width} / 2);
                    width: 0;
                    height: 0;
                    border-bottom: $exception-triangle-width solid $color-invert;
                    border-left: calc(#{$exception-triangle-width} / 2) solid transparent;
                    border-right: calc(#{$exception-triangle-width} / 2) solid transparent;
                }
            }

            // link state indicator
            &::after {
                content: "";
                position: absolute;
                right: $link-state-margin;
                top: calc(50% - (#{$link-state-width} / 2 + 1px));
                width: $link-state-width;
                height: $link-state-width;
                border: 1px solid $variable-link-state-border-color;
                border-radius: 5px;
                background-color: $color-link-state-auto;
            }

            &.link-state-ambigue::after {
                background-color: $color-link-state-ambigue;
            }

            &.link-state-user::after {
                background-color: $color-link-state-user;
            }

            &.link-state-constant::after {
                background-color: $color-link-state-constant;
            }

            &.link-state-none::after {
                background-color: $color-link-state-none;
            }
        }

        .name-area {
            border-top: none;
            font-family: monospace;
        }

        .fqn-area {
            background-color: $variable-fqn-area-background-color;
            color: $variable-fqn-area-label-color;
            border-top: none;
            border-bottom-right-radius: $variable-border-radius;
            padding: 0 8px;
            font-size: $pmod-small;

            .fqn-string {
                max-width: $fqn-max-width;
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }
    }

    // show gradient background for prototypes
    &.prototype .label-area {
        background: repeating-linear-gradient(-60deg, $prototype-variable-gradient-color, $prototype-variable-gradient-color 12px, $color-normal 0px, $color-normal 24px);
    }

    .content-area .label-area.show-fqn {
        border-bottom: none;
        border-bottom-right-radius: 0;
    }

    .menu-button {
        display: flex;
        flex-direction: column;
        position: absolute;
        right: $link-state-width + $link-state-margin + 4px;

        top: 0;

        ::ng-deep .mat-mdc-icon-button {
            width: 16px;
            height: 16px;
        }
    }




    // --- DRAG AND DROP -----------------------------------------
    &.mod-draggable-placeholder-source {
        opacity: 0.5;
    }


    &::ng-deep > drop-indicator {
        padding: calc(#{$variable-gap} / 2);
        left: calc(-#{$variable-gap} / 2);
        top: calc(-#{$variable-gap} / 2);
    }
}